import importlib.metadata
import tomllib
from typing import TypedDict

PATH_OS_NOTICE_DOC = "docs/legal/os_notices.md"
PATH_OS_NOTICE_DATA = "os_notices.toml"

TEMPLATE_OS_NOTICE_DOC = """<!-- Generated by scripts/generate_os_notice.py, DO NOT DIRECTLY EDIT THIS FILE. -->
<!-- markdownlint-disable -->

# 开源声明

| 开源项目 | 许可证 | 版权声明 |
| -------- | ------ | -------- |
{notices}
"""
TEMPLATE_OS_NOTICE_DOC_NOTICE = """| {name} | {license} | {copyrights} |"""
TEMPLATE_OS_NOTICE_DOC_NOTICE_LICENSE = """[`{license}`]({license_url})"""

Notice = TypedDict("Notice", {
    "name": str,
    "dependency": str,
    "repository": str,
    "license": str,
    "license-url": str,
    "copyrights": list[str]
})


def format_url(url: str, notice: Notice) -> str:
    if "dependency" not in notice:
        return url
    return url.format(
        version=importlib.metadata.version(notice["dependency"])
    )


def generate_os_notice(notices: list[Notice]) -> str:
    return TEMPLATE_OS_NOTICE_DOC.format(
        notices="\n".join([
            TEMPLATE_OS_NOTICE_DOC_NOTICE.format(
                name=f"[{notice["name"]}]({notice["repository"]})" if "repository" in notice else notice["name"],
                license=TEMPLATE_OS_NOTICE_DOC_NOTICE_LICENSE.format(
                    license=notice["license"],
                    license_url=format_url(notice["license-url"], notice)
                ),
                copyrights="<br />".join(notice["copyrights"])
            )
            for notice in notices
        ])
    )


def main() -> int:
    with open(PATH_OS_NOTICE_DATA, "rb") as f:
        data = tomllib.load(f)
    with open(PATH_OS_NOTICE_DOC, "w", encoding="utf-8") as f:
        f.write(generate_os_notice(notices=data["notices"]))
    return 0
